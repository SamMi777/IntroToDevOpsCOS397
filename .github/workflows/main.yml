name: Sort Lib

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Lint with black
      run: |
        python -m black --check --diff .
    - name: Lint with flake8
      run: |
        python -m flake8 . --show-source --statistics

  test:
    needs: linting  # Only run testing if linting passes
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Test with pytest
      run: |
        python -m pytest

  packaging:
    needs: test  # Only run packaging if tests pass
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    - name: Build package
      run: |
        python -m build
    - name: Verify build output (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        ls -la dist
    - name: Verify build output (Windows)
      if: runner.os == 'Windows'
      run: |
        dir dist
    - name: Upload package
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: python-packages-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist

